{"name":"Captionify","tagline":"Captionify - semantic image caption generator library in pure JS","body":"# Captionify\r\n\r\nCaptionify is non-jQuery semantic image caption generator library.\r\n\r\n\r\n## Usage\r\n\r\n1. Download Captionify from GitHub or install with Bower - `bower install captionify`.\r\n2. Add Captionify JS and CSS files to your `<head>`\r\n\r\n```html\r\n<link rel=\"stylesheet\" href=\"path_to_css/captionify.min.css\">\r\n<script src=\"path_to_js/captionify.min.js\"></script>\r\n```\r\n\r\nUsing Captionfiy can be as simple as:\r\n\r\n```js\r\nwindow.onload = function(){\r\n    var imageCaptions = new Captionify();\r\n}\r\n```\r\n\r\nThis will launch Captionify with the default settings. Captionify will caption all images contained in the `<body>` tag. It will use images' `alt` attribute as caption text. It will also wrap all images with text in their `alt` attribute in an HTML5 `<figure>` tag and put the caption in a `<figcaption>` tag. The example below modifies some of the default options:\r\n\r\n```js\r\nwindow.onload = function(){\r\n    var imageCaptions = new Captionify({\r\n        containerSelector: \".pageContent\",\r\n        figureClass: \"image\",\r\n        figcaptionClass: \"imageCaption\",\r\n        imgClassSelector: \"caption\"\r\n    });\r\n}\r\n```\r\n\r\nThe above example will caption all images with a class of `caption` contained in an element with a `pageContent` class. It also changes the default `<figure>` and `<figcaption>` tag classes.\r\n\r\n```js\r\nwindow.onload = function(){\r\n    var imageCaptions = new Captionify({\r\n        containerSelector: \"article\",\r\n        dataCaption: \"true\"\r\n    });\r\n}\r\n```\r\n\r\nIn this example all images in `<article>` are selected. Captionify will used the `data-caption` attribute text for captions instead of the default `alt` attribute.\r\n\r\n\r\n### Hyperlinked captions\r\n\r\nTo create a hyperlinked caption specify a `data-link` attribute on an image like so:\r\n\r\n```html\r\n<img src=\"example.jpg\" data-link=\"http://www.example.org/some-page\" alt=\"Example image\" />\r\n```\r\n\r\n\r\n## Options\r\n\r\n```js\r\nvar imageCaptions = new Captionify({\r\n    containerSelector: \"body\", // pass in a tag (like article), a class ( like .content) or id (like #images)\r\n    dataCaption: false, // set to true if you would like to use a 'data-caption' attribute for captions instead of the default 'alt' attribute\r\n    figureClass: \"imgFigure\", // default class for the <figure> tag\r\n    figcaptionClass: \"imgFigure__caption\", // default class for the <figcaption> tag\r\n    imgClassSelector: \"\", // pass in a class name of images which you would like to caption\r\n    inheritStyles: true, // <figure> tag will inherit any direct styling Ii.e., inline CSS) of its contained <img>. Set to false to disable this behaviour\r\n    mode: \"overlay\", // overlay | bottom\r\n    setFigureWidth: true // set to false if you have an explicitly stated width attribute on your images (in px) and you do not want the <figure> tag to inherit this width\r\n});\r\n```\r\n\r\n\r\n## Styling\r\n\r\nCaptionify does not inject any styling (actually, it does in some cases. If your images have an explicitly stated width attribute or inline CSS, the containing `figure` tag will get this styling and styling for the `<img>` will be removed. This behavior can be disabled through options). All styling should be done with CSS using the classes assigned to `<figure>` and `<figcaption>` tags (`imgFigure` and `imgFigure__caption` by default). CSS file with some base styling is provided with Captionify. Feel free to modify it as you wish to suit your needs :)\r\n\r\nCaptionify also works well in conjunction with the [captionss](http://www.captionss.com) package for hassle-free caption styling. If you choose to use captionss, replace the Captionify CSS file the captionss CSS file. Once that is done you can pass in an appropriate class name for a `<figure>` tag like so:\r\n\r\n```js\r\nwindow.onload = function(){\r\n    var imageCaptions = new Captionify({\r\n        containerSelector: \".myContainer\",\r\n        figureClass: \"embed hide-smooth dark\"\r\n    });\r\n}\r\n```\r\n\r\nThe above example should leave you with some nicely styled animated captions. See captionss [website](http://www.captionss.com) for more info.\r\n\r\n\r\n## Browser support\r\n\r\nTested in:\r\n\r\n* Chrome 14+\r\n* Firefox 3+\r\n* Opera 10.6+\r\n* Safari 4+\r\n* IE9+\r\n* iOS 3+\r\n* Android 2.3+\r\n","google":"UA-35710767-2","note":"Don't delete this file! It's used internally to help with page regeneration."}